# Docker Compose configuration for MoySklad automation system

services:
  # База данных PostgreSQL
  postgres:
    image: postgres:15
    container_name: moysklad-postgres
    environment:
      POSTGRES_DB: moysklad
      POSTGRES_USER: moysklad
      POSTGRES_PASSWORD: moysklad123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - moysklad-network

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: moysklad-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - moysklad-network

  # RabbitMQ для очередей
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: moysklad-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: moysklad
      RABBITMQ_DEFAULT_PASS: moysklad123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - moysklad-network

  # Основной сервис МойСклад
  moysklad-service:
    build:
      context: ./services/moysklad-service
      dockerfile: Dockerfile
    container_name: moysklad-service
    environment:
      - DATABASE_URL=postgresql://moysklad:moysklad123@postgres:5432/moysklad
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://moysklad:moysklad123@rabbitmq:5672/
      - MOYSKLAD_API_TOKEN=${MOYSKLAD_API_TOKEN}
    volumes:
      - ./services/moysklad-service:/app
      - ./data:/app/data
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - moysklad-network
    command: python app/api_ml.py

  # API для прогнозирования
  forecast-api:
    build:
      context: ./services/moysklad-service
      dockerfile: Dockerfile
    container_name: forecast-api
    environment:
      - DATABASE_URL=postgresql://moysklad:moysklad123@postgres:5432/moysklad
      - REDIS_URL=redis://redis:6379
      - MOYSKLAD_API_TOKEN=${MOYSKLAD_API_TOKEN}
    volumes:
      - ./services/moysklad-service:/app
      - ./data:/app/data
    ports:
      - "8001:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - moysklad-network
    command: python app/api_ml.py

  # Analytics Service
  analytics-service:
    build:
      context: ./services/analytics-service
      dockerfile: Dockerfile
    container_name: moysklad-analytics-service
    environment:
      - DATABASE_URL=postgresql://moysklad:moysklad123@postgres:5432/moysklad
      - REDIS_URL=redis://redis:6379
      - MOYSKLAD_API_TOKEN=${MOYSKLAD_API_TOKEN}
    volumes:
      - ./services/analytics-service:/app
      - ./data:/app/data
    ports:
      - "8004:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - moysklad-network

  # Purchase Service
  purchase-service:
    build:
      context: ./services/purchase-service
      dockerfile: Dockerfile
    container_name: moysklad-purchase-service
    environment:
      - DATABASE_URL=postgresql://moysklad:moysklad123@postgres:5432/moysklad
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://moysklad:moysklad123@rabbitmq:5672/
      - MOYSKLAD_API_TOKEN=${MOYSKLAD_API_TOKEN}
    volumes:
      - ./services/purchase-service:/app
      - ./data:/app/data
    ports:
      - "8005:8000"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - moysklad-network

  # Cron для ежедневной автоматизации
  automation-cron:
    build:
      context: ./services/moysklad-service
      dockerfile: Dockerfile
    container_name: automation-cron
    environment:
      - DATABASE_URL=postgresql://moysklad:moysklad123@postgres:5432/moysklad
      - REDIS_URL=redis://redis:6379
      - MOYSKLAD_API_TOKEN=${MOYSKLAD_API_TOKEN}
      - FORECAST_API_URL=http://forecast-api:8000
    volumes:
      - ./services/moysklad-service:/app
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
      - forecast-api
    networks:
      - moysklad-network
    command: |
      sh -c "
        echo '0 6 * * * python /app/app/daily_automation.py >> /app/data/automation.log 2>&1' > /etc/crontabs/root &&
        crond -f -d 8
      "

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  moysklad-network:
    driver: bridge 