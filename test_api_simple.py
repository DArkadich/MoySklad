#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
"""

import requests
import json
import time
from datetime import datetime

# URL API
API_BASE_URL = "http://localhost:8001"

def test_health():
    """–¢–µ—Å—Ç –∑–¥–æ—Ä–æ–≤—å—è API"""
    try:
        response = requests.get(f"{API_BASE_URL}/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ API –∑–¥–æ—Ä–æ–≤!")
            return response.json()
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return None
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API: {e}")
        return None

def test_forecast():
    """–¢–µ—Å—Ç –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è"""
    try:
        forecast_data = {
            "product_code": "60800",
            "forecast_days": 30
        }
        
        response = requests.post(
            f"{API_BASE_URL}/forecast",
            json=forecast_data,
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–ª—É—á–µ–Ω!")
            print(f"   –¢–æ–≤–∞—Ä: {result['product_code']}")
            print(f"   –¢–µ–∫—É—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏: {result['current_stock']}")
            print(f"   –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è: {result['forecast_consumption']:.4f} –µ–¥/–¥–µ–Ω—å")
            print(f"   –î–Ω–µ–π –¥–æ OoS: {result['days_until_oos']}")
            print(f"   –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –∑–∞–∫–∞–∑: {result['recommended_order']}")
            print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result['confidence']:.2f}")
            return result
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞: {e}")
        return None

def test_auto_purchase():
    """–¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫–∞–∑–∞"""
    try:
        order_data = {
            "product_code": "60800",
            "forecast_days": 30
        }
        
        response = requests.post(
            f"{API_BASE_URL}/auto-purchase",
            json=order_data,
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ê–≤—Ç–æ–∑–∞–∫–∞–∑ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {result['message']}")
            if 'purchase_order' in result:
                po = result['purchase_order']
                print(f"   –ó–∞–∫–∞–∑ ID: {po['supplier_id']}")
                print(f"   –°—É–º–º–∞: {po['total_amount']}")
                print(f"   –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {po['delivery_date']}")
            return result
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–∑–∞–∫–∞–∑–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∞–≤—Ç–æ–∑–∞–∫–∞–∑–∞: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ API")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API...")
    health = test_health()
    if not health:
        print("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞.")
        return
    
    # 2. –¢–µ—Å—Ç –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç ML-–ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è...")
    forecast = test_forecast()
    if not forecast:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è")
        return
    
    # 3. –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫–∞–∑–∞
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫–∞–∑–∞...")
    order = test_auto_purchase()
    if not order:
        print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–∫–∞–∑–∞")
        return
    
    # 4. –ò—Ç–æ–≥–∏
    print("\n4Ô∏è‚É£ –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")

if __name__ == "__main__":
    main() 