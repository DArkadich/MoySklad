#!/bin/bash

echo "üê≥ –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê ML-–ú–û–î–ï–õ–ï–ô –í DOCKER"
echo "=========================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
if docker ps | grep -q ml-service; then
    echo "‚úÖ ML-—Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω –≤ Docker"
    CONTAINER_ID=$(docker ps | grep ml-service | awk '{print $1}')
    echo "   ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $CONTAINER_ID"
else
    echo "‚ùå ML-—Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö"
    echo "   –ó–∞–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    echo ""
    echo "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
    echo "   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É: ./start_system.sh"
    echo "   2. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–æ–ª—å–∫–æ ML-—Å–µ—Ä–≤–∏—Å: docker-compose up -d ml-service"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è ML-—Å–µ—Ä–≤–∏—Å–∞ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo -e "\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è ML-—Å–µ—Ä–≤–∏—Å–∞..."
HEALTH_RESPONSE=$(docker exec ml-service curl -s http://localhost:8002/health 2>/dev/null)

if [ $? -eq 0 ] && [ ! -z "$HEALTH_RESPONSE" ]; then
    echo "‚úÖ ML-—Å–µ—Ä–≤–∏—Å –∑–¥–æ—Ä–æ–≤"
    MODELS_LOADED=$(echo $HEALTH_RESPONSE | grep -o '"models_loaded":[0-9]*' | cut -d':' -f2)
    echo "   –ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: $MODELS_LOADED"
else
    echo "‚ùå ML-—Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker logs ml-service"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –º–æ–¥–µ–ª–µ–π —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo -e "\n3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –º–æ–¥–µ–ª–µ–π..."
STATUS_RESPONSE=$(docker exec ml-service curl -s http://localhost:8002/models/status 2>/dev/null)

if [ $? -eq 0 ] && [ ! -z "$STATUS_RESPONSE" ]; then
    echo "‚úÖ –°—Ç–∞—Ç—É—Å –º–æ–¥–µ–ª–µ–π –ø–æ–ª—É—á–µ–Ω"
    TOTAL_MODELS=$(echo $STATUS_RESPONSE | grep -o '"total_models":[0-9]*' | cut -d':' -f2)
    AVG_ACCURACY=$(echo $STATUS_RESPONSE | grep -o '"average_accuracy":[0-9.]*' | cut -d':' -f2)
    
    echo "   –í—Å–µ–≥–æ –º–æ–¥–µ–ª–µ–π: $TOTAL_MODELS"
    if [ ! -z "$AVG_ACCURACY" ]; then
        echo "   –°—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å: $(echo "scale=2; $AVG_ACCURACY * 100" | bc)%"
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –º–æ–¥–µ–ª–µ–π"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –º–æ–¥–µ–ª–µ–π –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
echo -e "\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –º–æ–¥–µ–ª–µ–π –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
MODEL_FILES=$(docker exec ml-service ls -la /app/data/models/ 2>/dev/null | grep -E "\.(pkl|joblib)$" | wc -l)

if [ $? -eq 0 ]; then
    echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–æ–¥–µ–ª–µ–π –Ω–∞–π–¥–µ–Ω–∞"
    echo "   –§–∞–π–ª–æ–≤ –º–æ–¥–µ–ª–µ–π: $MODEL_FILES"
    
    if [ $MODEL_FILES -gt 0 ]; then
        echo "   –ü—Ä–∏–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤:"
        docker exec ml-service ls -la /app/data/models/ | grep -E "\.(pkl|joblib)$" | head -3 | while read file; do
            echo "     $(basename "$file")"
        done
    fi
else
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–æ–¥–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo -e "\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞..."
TEST_PRODUCT="30001"
FORECAST_RESPONSE=$(docker exec ml-service curl -s -X POST http://localhost:8002/forecast \
  -H "Content-Type: application/json" \
  -d "{\"product_id\":\"$TEST_PRODUCT\",\"forecast_days\":30}" 2>/dev/null)

if [ $? -eq 0 ] && [ ! -z "$FORECAST_RESPONSE" ]; then
    echo "‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–ª—É—á–µ–Ω –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ $TEST_PRODUCT"
    DAILY_DEMAND=$(echo $FORECAST_RESPONSE | grep -o '"daily_demand":[0-9.]*' | cut -d':' -f2)
    ACCURACY=$(echo $FORECAST_RESPONSE | grep -o '"accuracy":[0-9.]*' | cut -d':' -f2)
    MODEL_TYPE=$(echo $FORECAST_RESPONSE | grep -o '"model_type":"[^"]*"' | cut -d'"' -f4)
    
    echo "   –î–Ω–µ–≤–Ω–æ–π —Å–ø—Ä–æ—Å: $DAILY_DEMAND"
    if [ ! -z "$ACCURACY" ]; then
        echo "   –¢–æ—á–Ω–æ—Å—Ç—å: $(echo "scale=2; $ACCURACY * 100" | bc)%"
    fi
    echo "   –ú–æ–¥–µ–ª—å: $MODEL_TYPE"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo -e "\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
RESOURCE_STATS=$(docker stats ml-service --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.MemPerc}}" 2>/dev/null)

if [ $? -eq 0 ]; then
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤:"
    echo "$RESOURCE_STATS" | while read line; do
        if [ ! -z "$line" ]; then
            echo "   $line"
        fi
    done
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
echo -e "\n7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ ML-—Å–µ—Ä–≤–∏—Å–∞..."
RECENT_LOGS=$(docker logs --tail 5 ml-service 2>/dev/null)

if [ $? -eq 0 ]; then
    echo "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤:"
    echo "$RECENT_LOGS" | while read line; do
        if [ ! -z "$line" ]; then
            echo "   $line"
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
    ERROR_COUNT=$(docker logs ml-service 2>&1 | grep -i "error\|exception" | wc -l)
    if [ $ERROR_COUNT -gt 0 ]; then
        echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ $ERROR_COUNT —Å—Ç—Ä–æ–∫ —Å –æ—à–∏–±–∫–∞–º–∏"
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
echo -e "\n=========================================="
echo "üìã –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:"

if [ ! -z "$TOTAL_MODELS" ] && [ "$TOTAL_MODELS" -gt 0 ]; then
    echo "‚úÖ ML-–º–æ–¥–µ–ª–∏ –æ–±—É—á–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
    echo "   –ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: $TOTAL_MODELS"
    if [ ! -z "$AVG_ACCURACY" ]; then
        echo "   –°—Ä–µ–¥–Ω—è—è —Ç–æ—á–Ω–æ—Å—Ç—å: $(echo "scale=2; $AVG_ACCURACY * 100" | bc)%"
    fi
elif [ ! -z "$MODELS_LOADED" ] && [ "$MODELS_LOADED" -gt 0 ]; then
    echo "‚úÖ ML-—Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç, –º–æ–¥–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
    echo "   –ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: $MODELS_LOADED"
else
    echo "‚ö†Ô∏è ML-—Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –º–æ–¥–µ–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
    echo "   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—É—á–∏—Ç—å –º–æ–¥–µ–ª–∏"
fi

echo -e "\nüí° –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python3 check_ml_docker.py" 