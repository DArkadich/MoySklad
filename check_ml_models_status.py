#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ ML-–º–æ–¥–µ–ª–µ–π
"""

import os
import pickle
import pandas as pd
from datetime import datetime
import json

def check_models_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ ML-–º–æ–¥–µ–ª–µ–π"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê ML-–ú–û–î–ï–õ–ï–ô")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤ –º–æ–¥–µ–ª–µ–π
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –º–æ–¥–µ–ª–µ–π...")
    
    model_files = {
        "universal_forecast_models.pkl": "data/universal_forecast_models.pkl",
        "universal_model_performance.csv": "data/universal_model_performance.csv",
        "accurate_consumption_results.csv": "data/accurate_consumption_results.csv",
        "production_stock_data.csv": "data/production_stock_data.csv"
    }
    
    models_found = 0
    for name, path in model_files.items():
        if os.path.exists(path):
            size = os.path.getsize(path)
            size_mb = size / (1024 * 1024)
            print(f"‚úÖ {name}: {size_mb:.2f} MB")
            models_found += 1
        else:
            print(f"‚ùå {name}: –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –º–æ–¥–µ–ª–µ–π: {models_found}/{len(model_files)}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–µ–π
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–µ–π...")
    
    if os.path.exists("data/universal_model_performance.csv"):
        try:
            performance_df = pd.read_csv("data/universal_model_performance.csv")
            print("üìà –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:")
            for _, row in performance_df.iterrows():
                model = row['model']
                mae = row['mae']
                r2 = row['r2']
                print(f"   ‚Ä¢ {model}: MAE={mae:.4f}, R¬≤={r2:.4f}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
    print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—É—á–µ–Ω–∏—è...")
    
    if os.path.exists("data/accurate_consumption_results.csv"):
        try:
            consumption_df = pd.read_csv("data/accurate_consumption_results.csv")
            print(f"üìä –î–∞–Ω–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è: {len(consumption_df)} –∑–∞–ø–∏—Å–µ–π")
            print(f"   ‚Ä¢ –ü—Ä–æ–¥—É–∫—Ç—ã: {consumption_df['product_code'].nunique()}")
            print(f"   ‚Ä¢ –ü–µ—Ä–∏–æ–¥: {consumption_df['start_date'].min()} - {consumption_df['start_date'].max()}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–ø–∞—Å–∞—Ö
    if os.path.exists("data/production_stock_data.csv"):
        try:
            stock_df = pd.read_csv("data/production_stock_data.csv")
            print(f"üì¶ –î–∞–Ω–Ω—ã–µ –æ –∑–∞–ø–∞—Å–∞—Ö: {len(stock_df)} –∑–∞–ø–∏—Å–µ–π")
            if 'product_code' in stock_df.columns:
                print(f"   ‚Ä¢ –ü—Ä–æ–¥—É–∫—Ç—ã: {stock_df['product_code'].nunique()}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–ø–∞—Å–∞—Ö: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
    print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π...")
    
    if os.path.exists("data/universal_forecast_models.pkl"):
        try:
            with open("data/universal_forecast_models.pkl", "rb") as f:
                models = pickle.load(f)
            
            if isinstance(models, dict):
                print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–æ–¥–µ–ª–µ–π: {len(models)}")
                for model_name, model_info in models.items():
                    if isinstance(model_info, dict):
                        print(f"   ‚Ä¢ {model_name}: {type(model_info.get('model', 'Unknown')).__name__}")
                    else:
                        print(f"   ‚Ä¢ {model_name}: {type(model_info).__name__}")
            else:
                print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –º–æ–¥–µ–ª—å: {type(models).__name__}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–µ–π: {e}")
    
    # –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞
    print("\n5Ô∏è‚É£ –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê:")
    
    if models_found >= 3:
        print("‚úÖ ML-–º–æ–¥–µ–ª–∏ –æ–±—É—á–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        print("   ‚Ä¢ –§–∞–π–ª—ã –º–æ–¥–µ–ª–µ–π –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        print("   ‚Ä¢ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã")
        print("   ‚Ä¢ –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    elif models_found >= 2:
        print("‚ö†Ô∏è  ML-–º–æ–¥–µ–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ –≥–æ—Ç–æ–≤—ã")
        print("   ‚Ä¢ –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        print("   ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ")
    else:
        print("‚ùå ML-–º–æ–¥–µ–ª–∏ –Ω–µ –æ–±—É—á–µ–Ω—ã")
        print("   ‚Ä¢ –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—É—á–∏—Ç—å –º–æ–¥–µ–ª–∏")
        print("   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 train_initial_models.py")
    
    print(f"\nüìÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

if __name__ == "__main__":
    check_models_status() 